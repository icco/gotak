basePath: /
definitions:
  gotak.Board:
    properties:
      size:
        format: int64
        type: integer
      squares:
        additionalProperties:
          items:
            $ref: '#/definitions/gotak.Stone'
          type: array
        type: object
    type: object
  gotak.Game:
    properties:
      board:
        $ref: '#/definitions/gotak.Board'
      id:
        format: int64
        type: integer
      meta:
        items:
          $ref: '#/definitions/gotak.Tag'
        type: array
      slug:
        type: string
      turns:
        items:
          $ref: '#/definitions/gotak.Turn'
        type: array
    type: object
  gotak.Move:
    properties:
      moveCount:
        description: Move only
        format: int64
        type: integer
      moveDirection:
        type: string
      moveDropCounts:
        items:
          format: int64
          type: integer
        type: array
      square:
        type: string
      stone:
        description: Both Drop and Move
        type: string
      text:
        type: string
    type: object
  gotak.Stone:
    properties:
      player:
        type: integer
      type:
        type: string
    type: object
  gotak.Tag:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  gotak.Turn:
    properties:
      comment:
        type: string
      first:
        $ref: '#/definitions/gotak.Move'
      number:
        format: int64
        type: integer
      result:
        type: string
      second:
        $ref: '#/definitions/gotak.Move'
    type: object
  main.CreateGameRequest:
    properties:
      size:
        example: "8"
        type: string
    type: object
  main.MoveRequest:
    properties:
      move:
        example: c3
        type: string
      player:
        example: 1
        type: integer
      turn:
        example: 1
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: http://github.com/icco/gotak
  description: A Tak game server API
  license:
    name: MIT
    url: https://github.com/icco/gotak/blob/main/LICENSE
  termsOfService: http://swagger.io/terms/
  title: GoTak API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: Returns basic API information and available endpoints
      produces:
      - text/html
      responses:
        "200":
          description: HTML page with API information
          schema:
            type: string
      summary: Get API information
      tags:
      - info
  /game/{slug}:
    get:
      consumes:
      - application/json
      description: Returns the current state of a game
      parameters:
      - description: Game slug identifier
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gotak.Game'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get game state
      tags:
      - game
  /game/{slug}/{turn}:
    get:
      consumes:
      - application/json
      description: Returns the state of a game at a specific turn
      parameters:
      - description: Game slug identifier
        in: path
        name: slug
        required: true
        type: string
      - description: Turn number
        in: path
        name: turn
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gotak.Turn'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get specific turn
      tags:
      - game
  /game/{slug}/move:
    post:
      consumes:
      - application/json
      description: Submit a move for a specific game
      parameters:
      - description: Game slug identifier
        in: path
        name: slug
        required: true
        type: string
      - description: Move details
        in: body
        name: move
        required: true
        schema:
          $ref: '#/definitions/main.MoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gotak.Game'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Make a move in a game
      tags:
      - game
  /game/new:
    get:
      consumes:
      - application/json
      description: Creates a new Tak game with the specified board size
      parameters:
      - description: Game configuration
        in: body
        name: game
        schema:
          $ref: '#/definitions/main.CreateGameRequest'
      produces:
      - application/json
      responses:
        "307":
          description: Redirect to game URL
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new game
      tags:
      - game
    post:
      consumes:
      - application/json
      description: Creates a new Tak game with the specified board size
      parameters:
      - description: Game configuration
        in: body
        name: game
        schema:
          $ref: '#/definitions/main.CreateGameRequest'
      produces:
      - application/json
      responses:
        "307":
          description: Redirect to game URL
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new game
      tags:
      - game
  /healthz:
    get:
      consumes:
      - application/json
      description: Returns service health status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check
      tags:
      - health
swagger: "2.0"
