// PTN Ninja by Craig Laparo is licensed under a Creative Commons
// Attribution-NonCommercial-ShareAlike 4.0 International License.
// http://creativecommons.org/licenses/by-nc-sa/4.0/

@import "./mixins.scss";
@import "./variables.scss";

$stone-thickness: 0.3vmin;
$ptn-bg-radius: 0.2em;

#viewer {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: stretch;
  justify-content: center;

  .view-wrapper {
    font-size: 2.5vmin;
  }

  @media (max-width: $mobile/2) and (orientation: portrait) {
    .view-wrapper {
      font-size: 14px;
    }
  }
  @media (max-height: $mobile/2) and (orientation: landscape) {
    .view-wrapper {
      font-size: 14px;
    }
  }
}

.view-wrapper {
  pointer-events: none;
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  > *:last-child {
    will-change: flex-grow;

    html.animate-ui & {
      transition: flex-grow $time-smooth $natural;
    }
  }

  > *:not(.table-wrapper) {
    flex-grow: 1;

    html.editmode &:last-child {
      flex-grow: 0;
    }

    html:not(.board-only) & {
      min-width: $edge;
    }
  }
}

.table-wrapper {
  html.board-3d & {
    perspective: 150vmin;
    perspective-origin: center;
    transform-style: preserve-3d;
  }
}

.table {
  display: table;

  > div {
    display: table-row;

    > div {
      display: table-cell;
      position: relative;
      vertical-align: middle;
      transform-style: preserve-3d;

      html.animate-ui & {
        transition: width $time-smooth $natural;
      }

      &.center {
        z-index: 1;
      }
    }

    html.animate-ui & {
      transition: height $time-smooth $natural;
    }
  }

  html.board-3d & {
    transform-style: preserve-3d;
  }
  html:not(.board-3d) & {
    transform: none !important;
  }

}

.board {
  @include unselectable;
  font-size: inherit;
  z-index: 2;
  will-change: width, height;

  html.animate-ui & {
    transition: width $time-smooth $natural,
      height $time-smooth $natural;
  }

  .squares,
  .pieces {
    @include position-fill;
    pointer-events: none;
  }

  .squares {
    background-color: darken($primary-color-300, 1.5%);
    pointer-events: all;
    transform-style: preserve-3d;
  }

  .square {
    position: absolute;
    transform-style: preserve-3d;

    &.light {
      background-color: $primary-color-300;
    }

    &:before,
    &:after {
      content: '';
      display: block;
      @include position-fill;
      opacity: 0;
      pointer-events: none;
      background-color: $accent-color-500;
      z-index: -3;
    }
    &:after {
      background-color: $branch-color;
    }
    html.square-hl &.active:before {
      opacity: 0.75;
    }
    &.valid {
      &.selected:after,
      &.selected:hover:after {
        opacity: 0.25 !important;
      }
      &.p1.selected:after { background-color: $primary-color-100 }
      &.p2.selected:after { background-color: $primary-color-700 }

      html.can-hover & {
        &:hover:after {
          opacity: 0.35 !important;
        }
        &.p1:hover:after { background-color: $primary-color-100 }
        &.p2:hover:after { background-color: $primary-color-700 }
      }
      html.can-hover.p1 &:not(.placed):hover:after {
        background-color: $primary-color-100
      }
      html.can-hover.p2 &:not(.placed):hover:after {
        background-color: $primary-color-700
      }
    }

    html.show-branches & {
      &.option:after {
        opacity: 0.35;
      }

      .option-number {
        display: block;
      }
    }
    .option-number {
      text-align: center;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      font-size: 0.8em;
      line-height: 1em;
      display: none;

      &:empty {
        display: none !important;
      }
    }

    .road {
      @include position-fill;
      opacity: 0.25;
      pointer-events: none;

      > div {
        opacity: 0;
        position: absolute;
        top: 50%;
        bottom: 50%;
        left: 50%;
        right: 50%;
        will-change: opacity, left, right;

        html.animate-board & {
          transition: opacity $time-smooth/2 linear,
            background-color $time-smooth linear,
            left $time-smooth/2 $natural,
            right $time-smooth/2 $natural,
            top $time-smooth/2 $natural,
            bottom $time-smooth/2 $natural;
        }
      }

      .up { top: 0; }
      .down { bottom: 0; }
      .left { left: 0; }
      .right { right: 0; }
    }

    html.show-roads &.up .road .up,
    html.show-roads &.down .road .down {
      opacity: 1;
      left: 35%;
      right: 35%;
    }
    html.show-roads &.left .road .left,
    html.show-roads &.right .road .right {
      opacity: 1;
      top: 35%;
      bottom: 35%;
    }
    html.animate-board.show-roads &.up .road .up,
    html.animate-board.show-roads &.down .road .down,
    html.animate-board.show-roads &.left .road .left,
    html.animate-board.show-roads &.right .road .right {
      transition: opacity $time-smooth/2 linear $time-smooth/2,
        background-color $time-smooth linear,
        left $time-smooth/2 $natural $time-smooth/2,
        right $time-smooth/2 $natural $time-smooth/2,
        top $time-smooth/2 $natural $time-smooth/2,
        bottom $time-smooth/2 $natural $time-smooth/2;
    }

    &.p1 .road > div { background-color: $primary-color-100 }
    &.p2 .road > div { background-color: $primary-color-700 }
  }

  .pieces {
    transform-style: preserve-3d;
  }

  .piece {
    position: absolute;
    bottom: 0;
    left: 0;
    will-change: transform, opacity;

    html.animate-board & {
      transition: transform $time-smooth $natural,
        opacity $time-smooth linear;
    }

    &.unplayed {
      html:not(.show-unplayed-pieces) & {
        opacity: 0;
      }
      html.animate-board & {
        transition: transform $time-smooth $natural,
          opacity $time-smooth/2;
      }
      html.animate-board.show-unplayed-pieces & {
        transition: transform $time-smooth $natural,
          opacity $time-smooth/2 $time-smooth/2;
      }
    }

    .stone, .captive {
      border: 1px solid $blackish;

      html.board-shadows & {
        border-color: rgba(0, 0, 0, 0);
        box-shadow: 0 0.5px 2.5px rgba(0,0,0,0.5);
      }

      &.p1 {
        background-color: $primary-color-100;
        border-color: $primary-color-600;
      }
      &.p2 {
        background-color: $primary-color-600;
        border-color: $primary-color-900;
      }
    }

    &.immovable {
      .stone { opacity: 0; }
      .captive { opacity: 1; }
    }

    .stone {
      width: 50%;
      height: 50%;
      margin: 25%;
      border-radius: 10%;
      position: relative;
      will-change: transform;

      html.animate-board & {
        transition: all $time-smooth $natural;
      }
    }

    &:not(.unplayed) .stone.S {
      width: 18.75%;
      border-radius: 27%/10%;
      margin-left: 40.625%;
      will-change: transform, width, border-radius, margin-left, box-shadow;

      &.p1 {
        background-color: $primary-color-50;
        transform: rotate(-45deg);

        html.board-shadows & {
          box-shadow: -1px 1px 2px 0 rgba(0,0,0,0.14), -1px 1px 5px 0 rgba(0,0,0,0.12), -1px 1px 1px -2px rgba(0,0,0,0.4);

          @media (max-width: $mobile) {
            box-shadow: -1px 1px 2px rgba(0,0,0,0.5);
          }
        }
      }
      &.p2 {
        background-color: $primary-color-700;
        transform: rotate(45deg);

        html.board-shadows & {
          box-shadow: 1px 1px 2px 0 rgba(0,0,0,0.14), 1px 1px 5px 0 rgba(0,0,0,0.12), 1px 1px 1px -2px rgba(0,0,0,0.4);

          @media (max-width: $mobile) {
            box-shadow: 1px 1px 2px rgba(0,0,0,0.5);
          }
        }
      }
    }

    .stone.C {
      border-radius: 50%;

      &.p1 {
        background-color: $primary-color-50;
      }
      &.p2 {
        background-color: $primary-color-700;
      }
    }

    .captive {
      position: absolute;
      bottom: 25%;
      right: 25%;
      width: 15%;
      height: 7.5%;
      opacity: 0;
      border-radius: 15%/30%;
      will-change: opacity, right;

      html.animate-board & {
        transition: all $time-smooth $natural;
      }
    }

    &.immovable {
      .stone {
        opacity: 0;

        html.board-3d & {
          opacity: 0.25;
        }
      }

      .captive {
        opacity: 1;
        right: 5%;

        html.board-3d & {
          opacity: 0;
        }
      }
    }
  }
}

#viewer {
  .scores {
    @include unselectable;
    position: relative;
    white-space: nowrap;
    height: 2em;
    line-height: 2em;
    overflow: hidden;
    margin-bottom: -2.5em;
    opacity: 0;
    padding-bottom: 0.5em;
    will-change: margin-bottom, opacity;

    html.animate-ui & {
      transition: margin-bottom $time-smooth $natural,
        opacity $time-smooth linear;
    }

    html.show-flat-counts & {
      margin-bottom: 0;
      opacity: 1;
    }

    > .player1, > .player2 {
      position: absolute;
      top: 0;
      width: 50%;
      display: flex;
      box-sizing: border-box;
      will-change: width;

      &:before {
        content: '';
        position: absolute;
        bottom: -0.5em;
        width: 0;
        height: 0.5em;
        background: $accent-color-500;
        will-change: width;
      }

      html.animate-board & {
        &, &:before {
          transition: width $time-smooth $natural;
        }
      }
    }

    .name, .score {
      padding: 0 0.5em;
    }

    .name {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .score {
      will-change: content;
    }

    > .player1 {
      border-radius: $ptn-bg-radius 0 0 0;
      left: 0;
      background-color: $primary-color-100;
      color: $primary-color-700;

      &:before {
        right: 0;
      }

      html.p1 &:before {
        width: 100%;
      }

      .name {
        padding-right: 0;
        flex-grow: 1;
      }
    }

    > .player2 {
      border-radius: 0 $ptn-bg-radius 0 0;
      right: 0;
      background-color: $primary-color-700;
      color: $primary-color-100;

      &:before {
        left: 0;
      }

      html.p2 &:before {
        width: 100%;
      }

      .name {
        padding-left: 0;
      }

      .score {
        flex-grow: 1;
      }
    }
  }

  .current-move,
  .branches {
    @include unselectable;
    align-self: center;
    display: flex;
    flex-direction: column;
    z-index: 1;
  }

  .current-move {
    pointer-events: all;
    position: relative;
    font-size: 1.25em;
    margin-bottom: -2.5em;
    opacity: 0;
    will-change: content, opacity, margin-bottom;

    html.show-current-move & {
      opacity: 1;
      margin-bottom: 0;
    }

    html.animate-ui & {
      transition: opacity $time-smooth linear,
        margin-bottom $time-smooth $natural;
    }

    html.board-3d & {
      position: absolute;
      bottom: 0;
    }
    html.board-3d.show-play-controls & {
      position: absolute;
      bottom: $toolbar-height;
    }

    .mdl-button {
      width: 2em;
      height: 2em;
      margin-bottom: 0.2em;
    }

    .branch_button {
      margin-right: 0.2em;

      &:not(.visible) {
        display: none;
      }

      &:hover, &.active {
        background-color: rgba($branch-color, 0.75);
      }
      &.active:hover, &:active {
        background-color: $branch-color;
      }
    }

    .move .space:first-child {
      display: none;
    }

    .ply {
      cursor: pointer;
      padding: 0 0.2em;
    }
  }

  .branches {
    position: absolute;
    top: -0.5em;
    pointer-events: none;
    opacity: 0;
    transform: translateY(-50%);
    flex-direction: column;
    border-radius: 2px;
    background-color: $primary-color-400;
    box-shadow: $shadow1;
    overflow: hidden;
    will-change: content, opacity, transform;

    &:not(:empty).visible {
      pointer-events: all;
      opacity: 1;
      transform: translateY(-100%);
    }

    html.animate-ui &.visible {
      transition: opacity $time-smooth linear,
        transform $time-smooth $natural;
    }

    > .branch {
      @include unselectable;
      position: relative;
      max-width: calc(100vw - #{$edge*2});
      overflow-wrap: break-word;
      padding: 0.75em;
      white-space: nowrap;
      cursor: pointer;
      z-index: 1;

      &:hover {
        background-color: rgba($branch-color, 0.5);
      }

      &:active {
        background-color: $branch-color;
      }

      &.active {
        background-color: $accent-color-500;
      }

      .ptn {
        margin-left: 0.5em;
        pointer-events: none;
      }
    }
  }
}


.labels {
  @include unselectable;
  color: $primary-color-100;
  display: flex;
  justify-content: space-around;
  opacity: 0;

  html.show-axis-labels & {
    opacity: 1;
  }

  &.row {
    will-change: opacity, right;

    html.animate-ui & {
      transition: opacity $time-smooth linear,
        right $time-smooth $natural;
    }

    html.show-axis-labels & {
      right: 0;
    }

    position: absolute;
    top: 0;
    bottom: 0;
    width: 2em;
    right: -2em;
    flex-direction: column-reverse;
    text-align: center;
  }

  &.col {
    will-change: opacity, margin-top;

    html.animate-ui & {
      transition: opacity $time-smooth linear,
        margin-top $time-smooth $natural;
    }

    html.show-axis-labels & {
      margin-top: 0;
    }

    flex-direction: row;
    width: 100%;
    line-height: 2em;
    height: 1.5em;
    margin-top: -1.5em;

    html.board-only & {
      height: 2em;
      margin-top: calc(-2em + #{$edge});
    }
  }
}


.unplayed-bg {
  @include position-fill;
  border-radius: 0 $ptn-bg-radius $ptn-bg-radius 0;
  background-color: $primary-color-400;
}

.unplayed-bg-cell {
  will-change: width;

  html:not(.animate-ui) & {
    transition: none;
  }
}


@for $size from 3 through 9 {
  .size-#{$size} {
    .square,
    .piece {
      width: percentage(1/$size);
      height: percentage(1/$size);
    }
  }

  @for $col from 0 through $size - 1 {
    .size-#{$size} .c#{$col} {
      left: percentage($col/$size);
    }
  }
  @for $row from 0 through $size - 1 {
    .size-#{$size} .r#{$row} {
      bottom: percentage($row/$size);
    }
  }
}

#viewer > .controls {
  @include unselectable;
  background-color: $primary-color-800;
  overflow: hidden;
  height: $toolbar-height;
  margin-bottom: -$toolbar-height;
  will-change: margin-bottom;
  z-index: 2;

  html.animate-ui & {
    transition: margin-bottom $time-smooth $natural;
  }

  html.show-play-controls & {
    margin-bottom: 0;
  }

  .buttons {
    display: flex !important;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: $edge/2 $edge;
  }

  button {
    width: 40px;
    height: 40px;

    + button {
      margin-left: 20px;
    }
  }

  button.play {

    i {
      transition: opacity $time-smooth linear;

      &.pause {
        position: absolute;
        opacity: 0;
      }
    }

    html.playing & {
      i.play {
        opacity: 0;
      }
      i.pause {
        opacity: 1;
      }
    }
  }

  @media (max-width: 430px) {
    button.prev_move, button.next_move {
      display: none;
    }
  }
}

.current-move > .controls {
  white-space: nowrap;

  @media (min-width: 431px) {
    button.prev_move, button.next_move {
      opacity: 0;
      pointer-events: none;
    }
  }
}
